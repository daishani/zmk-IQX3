/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        tab_esc_ctrl: tab_esc_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB_ESC_CTRL";
            #binding-cells = <0>;
            bindings = <&mt LCTRL ESC>, <&kp TAB>;
        };

        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <180>;
            tapping-term-ms = <200>;
            global-quick-tap;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            global-quick-tap;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };
    };

    macros {
        KEY: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(C) &kp H &kp L &kp DOT &kp N8 &kp N8 &kp N0 &kp N6 &kp N0 &kp N2 &kp EXCL &kp AT &kp POUND &kp DLLR &kp PRCNT &kp CARET &kp ENTER>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
  &lt 2 Q      &kp W  &kp E              &kp R    &kp T        &kp Y            &kp U        &kp I        &kp O    &kp P
  &kp A        &kp S  &kp D              &kp F    &kp G        &kp H            &kp J        &kp K        &kp L    &kp SLASH
  &mt LCTRL Z  &kp X  &kp C              &kp V    &kp B        &kp N            &kp M        &kp COMMA    &kp DOT  &mt RSHFT PG_DN
                      &mt LALT CAPSLOCK  &kp TAB  &lt 1 SPACE  &lt 1 BACKSPACE  &lt 2 ENTER  &lt 3 PG_UP
            >;
        };

        Number {
            label = "Number";
            bindings = <
  &kp ESC    &kp N1  &kp N2    &kp N3     &kp DOT    &kp Y          &kp U           &kp MINUS   &kp EQUAL  &kp N0
  &kp LSHFT  &kp N4  &kp N5    &kp N6     &kp N0     &kp H          &kp J           &kp LBKT    &kp RBKT   &kp BSLH
  &kp LGUI   &kp N7  &kp N8    &kp N9     &kp BSPC   &kp C_VOL_DN   &kp C_VOL_UP    &kp SEMI    &kp APOS   &kp DEL
                     &kp LALT  &kp LCTRL  &kp SPACE  &kp BSPC       &kp ENTER       &kp DELETE
            >;
        };

        Icons {
            label = "Icons";
            bindings = <
  &kp GRAVE  &kp F1  &kp F2    &kp F3   &kp F4   &kp T      &kp HOME  &kp UP     &kp END    &kp O
  &kp LSHFT  &kp F5  &kp F6    &kp F7   &kp F8   &kp PG_UP  &kp LEFT  &kp DOWN   &kp RIGHT  &kp PG_DN
  &kp LCTRL  &kp F9  &kp F10   &kp F11  &kp F12  &kp N      &kp M     &kp COMMA  &kp DOT    &kp RCTRL
                     &kp LALT  &none    &none    &kp SPACE  &none     &none
            >;
        };

        Ble {
            label = "Ble";
            bindings = <
  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &none  &none   &none  &none
  &bootloader   &none         &none         &bt BT_CLR    &out OUT_TOG  &none  &none  &none   &none  &none
  &none         &none         &none         &out OUT_USB  &out OUT_BLE  &none  &none  &none   &none  &none
                              &none         &none         &none         &none  &none  &trans
            >;
        };

        Ctrls {
            label = "Ctrls";
            bindings = <
  &kp LC(J)            &kp LA(LC(W))  &kp LC(LSHFT)  &kp LC(Y)  &kp LG(TAB)   &trans  &trans     &trans  &trans  &trans
  &mt LA(LC(A)) LC(A)  &kp LC(S)      &kp LG(D)      &kp LC(F)  &kp LG(L)     &trans  &kp LC(J)  &trans  &trans  &trans
  &kp LC(Z)            &kp LC(X)      &kp LC(C)      &kp LC(V)  &kp LC(B)     &trans  &trans     &trans  &trans  &trans
                                      &kp TAB        &trans     &kp LEFT_ALT  &trans  &trans     &trans
            >;
        };

        layer_x {
            bindings = <
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
